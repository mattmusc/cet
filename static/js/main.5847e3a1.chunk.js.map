{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","Title","p","_templateObject2","Subtitle","_templateObject3","HashTag","h4","_templateObject4","Lander","_templateObject5","Anchor","a","_templateObject6","Row","_templateObject7","Column","_templateObject8","Field","props","react_default","createElement","Fragment","className","value","name","StyledField","_templateObject9","align","defaultProps","data","right","left","App","href","style","marginTop","map","d","i","key","concat","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+rDAGA,IAAMA,EAAYC,IAAOC,IAAVC,KAUTC,EAAQH,IAAOI,EAAVC,KAMLC,EAAWN,IAAOI,EAAVG,KAKRC,EAAUR,IAAOS,GAAVC,KAMPC,EAASX,IAAOI,EAAVQ,KAMNC,EAASb,IAAOc,EAAVC,KASNC,EAAMhB,IAAOC,IAAVgB,KAUHC,EAASlB,IAAOC,IAAVkB,KAOZ,SAASC,EAAMC,GACb,OACIC,EAAAR,EAAAS,cAAAD,EAAAR,EAAAU,SAAA,KACEF,EAAAR,EAAAS,cAAA,KAAGE,UAAW,cAAeJ,EAAMK,OACnCJ,EAAAR,EAAAS,cAAA,SAAIF,EAAMM,OAKlB,IACMC,EAAc5B,IAAOC,IAAV4B,IACD,SAAAR,GAAK,OAAIA,EAAMS,OAEb,SAAAT,GAAK,MAAoB,UAAhBA,EAAMS,MAJT,OAI+C,KACtD,SAAAT,GAAK,MAAoB,SAAhBA,EAAMS,MALR,OAK6C,MAOrEV,EAAMW,aAAe,CACnBD,MAAO,QAGT,IAAME,EAAO,CACXC,MAAO,CACL,CACEP,MAAO,gBACPC,KAAM,gBAER,CACED,MAAO,oCACPC,KAAM,QAER,CACED,MAAO,iBACPC,KAAM,QAGVO,KAAM,CACJ,CACER,MAAO,eACPC,KAAM,gBAER,CACED,MAAO,oCACPC,KAAM,UAwDGQ,MAnDf,WACE,OACIb,EAAAR,EAAAS,cAACxB,EAAD,KACEuB,EAAAR,EAAAS,cAACpB,EAAD,yBACAmB,EAAAR,EAAAS,cAACjB,EAAD,mBACAgB,EAAAR,EAAAS,cAACZ,EAAD,0BACAW,EAAAR,EAAAS,cAACjB,EAAD,mBACAgB,EAAAR,EAAAS,cAACf,EAAD,KACEc,EAAAR,EAAAS,cAACV,EAAD,CAAQuB,KAAM,qDAAd,eAIFd,EAAAR,EAAAS,cAACjB,EAAD,8DACAgB,EAAAR,EAAAS,cAACK,EAAD,CAAaE,MAAO,SAAUO,MAAO,CAACC,UAAW,SAC/ChB,EAAAR,EAAAS,cAACH,EAAD,CACIM,MAAO,oBACPC,KAAM,aAGZL,EAAAR,EAAAS,cAACP,EAAD,KACEM,EAAAR,EAAAS,cAACL,EAAD,KAEIc,EAAI,MAAUO,IAAI,SAACC,EAAGC,GACpB,OACInB,EAAAR,EAAAS,cAACK,EAAD,CAAac,IAAG,SAAAC,OAAWF,GAAKX,MAAO,SACrCR,EAAAR,EAAAS,cAACH,EAAD,CACIM,MAAOc,EAAEd,MACTC,KAAMa,EAAEb,WAMxBL,EAAAR,EAAAS,cAACL,EAAD,KAEIc,EAAI,KAASO,IAAI,SAACC,EAAGC,GACnB,OACInB,EAAAR,EAAAS,cAACK,EAAD,CAAac,IAAG,QAAAC,OAAUF,GAAKX,MAAO,QACpCR,EAAAR,EAAAS,cAACH,EAAD,CACIM,MAAOc,EAAEd,MACTC,KAAMa,EAAEb,cC9IdiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5B,EAAAR,EAAAS,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5847e3a1.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin: 7em 6em 10em;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  color: #414141;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Title = styled.p`\n  margin-bottom: 0;\n  font-size: 34px;\n  font-weight: 500;\n`;\n\nconst Subtitle = styled.p`\n  margin-top: 0;\n  font-size: 20px;\n`;\n\nconst HashTag = styled.h4`\n  font-weight: 700;\n  font-size: 40px;\n  margin-top: 0;\n`;\n\nconst Lander = styled.p`\n  font-weight: 400;\n  font-size: 32px;\n  margin: 2em 0 1em;\n`;\n\nconst Anchor = styled.a`\n  color: #414141;\n  text-decoration: none;\n  \n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 50%;\n  align-items: top;\n  justify-content: space-between;\n  margin: 1.5em 0 1em;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 100%;\n  flex: 1;\n`;\n\nfunction Field(props) {\n  return (\n      <>\n        <p className={\"text-value\"}>{props.value}</p>\n        <p>{props.name}</p>\n      </>\n  );\n}\n\nconst marginRightLeft = '20px';\nconst StyledField = styled.div`\n  text-align: ${props => props.align};\n  margin-top: 15px;\n  margin-right: ${props => props.align === 'right' ? marginRightLeft : '0'}\n  margin-left: ${props => props.align === 'left' ? marginRightLeft : '0'}\n  .text-value {\n    font-weight: 700;\n    font-size: 1.5em;\n  }\n`;\n\nField.defaultProps = {\n  align: 'left'\n};\n\nconst data = {\n  right: [\n    {\n      value: 'Tommaso Paino',\n      name: 'Intestatario',\n    },\n    {\n      value: 'FR76 3000 4003 6500 0011 8254 748',\n      name: 'IBAN',\n    },\n    {\n      value: 'BNP AFR PP XXX',\n      name: 'BNC',\n    },\n  ],\n  left: [\n    {\n      value: 'Clelia Zurlo',\n      name: 'Intestatario',\n    },\n    {\n      value: 'IT46 N030 6967 6845 1032 6995 226',\n      name: 'IBAN',\n    },\n  ],\n};\n\nfunction App() {\n  return (\n      <Container>\n        <Title>Clelia e Tommaso</Title>\n        <Subtitle>06.07.2019</Subtitle>\n        <Lander>That's all folks!</Lander>\n        <Subtitle>Seguici su</Subtitle>\n        <HashTag>\n          <Anchor href={\"https://www.instagram.com/explore/tags/lescleins/\"}>\n            #lesCleins\n          </Anchor>\n        </HashTag>\n        <Subtitle>E se volete farci un regale, siete ancora in tempo...</Subtitle>\n        <StyledField align={\"center\"} style={{marginTop: '40px'}}>\n          <Field\n              value={\"Regalo Matrimonio\"}\n              name={\"Causale\"}\n          />\n        </StyledField>\n        <Row>\n          <Column>\n            {\n              data['right'].map((d, i) => {\n                return (\n                    <StyledField key={`right-${i}`} align={\"right\"}>\n                      <Field\n                          value={d.value}\n                          name={d.name}\n                      />\n                    </StyledField>);\n              })\n            }\n          </Column>\n          <Column>\n            {\n              data['left'].map((d, i) => {\n                return (\n                    <StyledField key={`left-${i}`} align={\"left\"}>\n                      <Field\n                          value={d.value}\n                          name={d.name}\n                      />\n                    </StyledField>);\n              })\n            }\n          </Column>\n        </Row>\n      </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}